<?xml version="1.0" encoding="UTF-8"?>
<class name="SplashScreen" extends="World" extends-java="World" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve">Constructor for objects of class SplashScreen.</javadoc>
            <params/>
            <throws/>
            <delegate target="super" params="900,900,1" params-java="900, 900, 1"/>
            <body>
                <call expression="prepare()" expression-java="prepare()" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <if condition="exit()" condition-java="exit()" enable="true">
                    <ifStatements>
                        <call expression="Greenfoot.setWorld(new MainMenu())" expression-java="Greenfoot.setWorld( new MainMenu())" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="boolean" type-java="boolean" name="exit" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="boolean" type-java="boolean" name="skip" value="false" value-java="false" enable="true"/>
                <if condition="Greenfoot.isKeyDown(&quot;space&quot;)" condition-java="Greenfoot.isKeyDown(&quot;space&quot;)" enable="true">
                    <ifStatements>
                        <assign dest="skip" dest-java="skip" src="true" src-java="true" enable="true"/>
                    </ifStatements>
                </if>
                <return value="skip" value-java="skip" enable="true"/>
            </body>
        </method>
        <method access="private" type="void" type-java="void" name="prepare" enable="true">
            <javadoc xml:space="preserve">Prepare the world for the start of the program.
That is: create the initial objects and add them to the world.</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="GreenfootImage" type-java="GreenfootImage" name="drawedImage" value="new GreenfootImage(&quot;VanierLOGO.png&quot;)" value-java=" new GreenfootImage(&quot;VanierLOGO.png&quot;)" enable="true"/>
                <call expression="getBackground().drawImage(drawedImage,100,200)" expression-java="getBackground().drawImage(drawedImage, 100, 200)" enable="true"/>
            </body>
        </method>
    </methods>
</class>
